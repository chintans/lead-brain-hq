---
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import fetchApi from "../lib/strapi";
import type Article from "../interfaces/article";

const articles = await fetchApi<Article[]>({
  endpoint: "articles?populate=image",
  wrappedByKey: "data",
});

// Sort content entries by publication date
articles.sort(function (a, b) {
  return b.attributes.publishedAt.valueOf() - a.attributes.publishedAt.valueOf();
});
---

<Layout title="Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Our Blog</Fragment>
      <Fragment slot="desc">
        We write about building startups and thoughts going on our mind.
      </Fragment>
    </Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {
          articles.map((article, index) => (
            <li>
              <a href={`/blog/${article.attributes.slug}`}>
                <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                  <Picture
                    src={article.attributes.image.data.attributes.url}
                    alt={article.attributes.image.data.attributes.alt}
                    sizes="(max-width: 800px) 100vw, 800px"
                    width={800}
                    height={600}
                    loading={index <= 2 ? "eager" : "lazy"}
                    decoding={index <= 2 ? "sync" : "async"}
                    class="w-full rounded-md object-cover object-center bg-white"
                  />
                  <div>
                    <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
                      {article.attributes.category}
                    </span>

                    <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 ">
                      {article.attributes.title}
                    </h2>

                    <div class="flex gap-2 mt-3">
                      <span class="text-gray-400">
                        {article.attributes.author}
                      </span>
                      <span class="text-gray-400">â€¢ </span>
                      <time
                        class="text-gray-400"
                        datetime={article.attributes.publishedAt.toISOString()}>
                        {article.attributes.publishedAt.toDateString()}
                      </time>
                    </div>
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
